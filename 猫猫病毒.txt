特工770正在调查一种神秘的病毒，感染这种病毒的人有几率会在每天睡梦里梦见一只可爱的很胖的猫咪。770发现，病毒有1种初始状态，还有6天的潜伏期，在此期间每天每种状态会同时发生下述两种变异，产生两种新状态，同时旧的状态会全部消失。请注意，这两种新状态在次日会各自变异，产生2×2=4种新状态，以此类推。当潜伏期结束后，如果最后一天变异产生的状态中，存在一个状态满足下述条件，那么这个人就会开始梦见猫咪。现在特工770要求你编写一个程序，输入病毒的初始状态，计算潜伏期结束后感染者是否会开始梦见猫咪。

变异规则
病毒状态是一个unsigned int，记为V；病毒已变异次数记为T；

左移变异：若((1<<31)&V)!=0，则V左移T位产生新状态，否则V左移1位产生新状态；
右移变异：若(1&V)!=0，则V右移T位产生新状态，否则V右移1位产生新状态。
梦见猫咪的条件
记常量0x0003C000为M，若最后一天变异产生的某个状态V满足((V&M)^M)==0，则感染者会开始梦见猫咪，请输出yes；否则，感染者不会开始梦见猫咪，请输出no。

Input
一个整数，最小值是0，最大值是pow(2, 32)-1，代表病毒的初始状态。
#include<stdio.h>
int zuoyi(unsigned int V,int T)
{
    int M=0x0003C000;
    if(((1<<31)&V)!=0)
        {
            V=V<<T;
        }
        else
        {
            V=V<<1;
        }
    while(T<5)
    {     
            return zuoyi(V,T+1)+youyi(V,T+1);
    }
    if(((V&M)^M)==0)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
int youyi(unsigned int V,int T)
{
    int M=0x0003C000;
    if((1&V)!=0)
        {
            V=V>>T;
        }
        else
        {
            V=V>>1;
        }
    while(T<5)
    {     
            return zuoyi(V,T+1)+youyi(V,T+1);
    }
    if(((V&M)^M)==0)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}
int main()
{
    int M=0x0003C000;
    unsigned int V=0;
    scanf("%u",&V);
    if(zuoyi(V,0)||youyi(V,0))
    {
        printf("yes\n");
    }
    else
    {
        printf("no\n");
    }
    return 0;
}